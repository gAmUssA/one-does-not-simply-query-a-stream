services:
  kafka:
    image: docker.io/bitnami/kafka:3.7
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  console:
    hostname: console
    container_name: console
    image: docker.redpanda.com/redpandadata/console:latest
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        server:
          listenPort: 9080
        kafka:
          brokers: ["kafka:9092"]
          schemaRegistry:
            enabled: false
            urls: ["http://schema-registry:8081"]
        connect:
          enabled: false
    ports:
      - "9080:9080"
    depends_on:
      - kafka
  
  risingwave:
    image: risingwavelabs/risingwave:latest
    ports:
      - "4566:4566"
      - "5691:5691"
    
  psql-client:
    image: postgres:latest
    depends_on:
      - risingwave
    entrypoint: [ "tail", "-f", "/dev/null" ]